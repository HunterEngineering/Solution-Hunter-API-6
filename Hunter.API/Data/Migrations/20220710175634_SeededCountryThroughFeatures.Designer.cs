// <auto-generated />
using System;
using Hunter.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hunter.API.Data.Migrations
{
    [DbContext(typeof(HunterDbContext))]
    [Migration("20220710175634_SeededCountryThroughFeatures")]
    partial class SeededCountryThroughFeatures
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Hunter.API.Data.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Account")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Billing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Method")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextChargeOccurs")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartChargeableSvcs")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Account = "DebitCard goes here",
                            Address = "Accounting Office",
                            Billing = "Patch",
                            Method = "Auto Monthly Debit",
                            Name = "Solution Hunter Engineering",
                            NextChargeOccurs = new DateTime(2022, 8, 9, 13, 56, 34, 802, DateTimeKind.Local).AddTicks(9685),
                            Region = "NewEngland",
                            StartChargeableSvcs = new DateTime(2022, 7, 10, 13, 56, 34, 802, DateTimeKind.Local).AddTicks(9655)
                        });
                });

            modelBuilder.Entity("Hunter.API.Data.Feature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IndividualId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IndividualId");

                    b.ToTable("Features");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IndividualId = 1
                        });
                });

            modelBuilder.Entity("Hunter.API.Data.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Fitness")
                        .HasColumnType("float");

                    b.Property<int>("Generations")
                        .HasColumnType("int");

                    b.Property<int>("PopulationId")
                        .HasColumnType("int");

                    b.Property<int>("PopulationPosition")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PopulationId");

                    b.ToTable("Individuals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Fitness = 0.0,
                            Generations = 0,
                            PopulationId = 1,
                            PopulationPosition = 0
                        });
                });

            modelBuilder.Entity("Hunter.API.Data.Population", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Era")
                        .HasColumnType("int");

                    b.Property<int>("Evolution")
                        .HasColumnType("int");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("initialEra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Populations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Era = 0,
                            Evolution = 0,
                            ProjectId = 1,
                            initialEra = "",
                            isActive = true
                        });
                });

            modelBuilder.Entity("Hunter.API.Data.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Runner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            Designer = "Chuck Duncan",
                            Runner = "Buttons Duncan",
                            Title = "Sample Project"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "36fb76f4-efa8-4776-be78-f89f4679fe78",
                            ConcurrencyStamp = "d40a6b52-3966-4e99-8f88-488e36a21dc8",
                            Name = "Administrator",
                            NormalizedName = "ADMINISTRATOR"
                        },
                        new
                        {
                            Id = "4b16ca6f-fcd0-4703-86f4-080ae56b1323",
                            ConcurrencyStamp = "7fb37a9f-7ca7-4137-9eda-e81d2519d208",
                            Name = "User",
                            NormalizedName = "USER"
                        },
                        new
                        {
                            Id = "350d32bd-2bef-4c1f-b1cb-d47fea4fd043",
                            ConcurrencyStamp = "daab32f7-ebe2-43a2-98ba-bd2c8bc2f886",
                            Name = "Visitor",
                            NormalizedName = "VISITOR"
                        });
                });

            modelBuilder.Entity("Hunter.API.Data.Feature", b =>
                {
                    b.HasOne("Hunter.API.Data.Individual", "Individual")
                        .WithMany("Features")
                        .HasForeignKey("IndividualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Individual");
                });

            modelBuilder.Entity("Hunter.API.Data.Individual", b =>
                {
                    b.HasOne("Hunter.API.Data.Population", "Population")
                        .WithMany("Individuals")
                        .HasForeignKey("PopulationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Population");
                });

            modelBuilder.Entity("Hunter.API.Data.Population", b =>
                {
                    b.HasOne("Hunter.API.Data.Project", "Project")
                        .WithMany("Populations")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("Hunter.API.Data.Project", b =>
                {
                    b.HasOne("Hunter.API.Data.Company", "Company")
                        .WithMany("Projects")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Hunter.API.Data.Company", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("Hunter.API.Data.Individual", b =>
                {
                    b.Navigation("Features");
                });

            modelBuilder.Entity("Hunter.API.Data.Population", b =>
                {
                    b.Navigation("Individuals");
                });

            modelBuilder.Entity("Hunter.API.Data.Project", b =>
                {
                    b.Navigation("Populations");
                });
#pragma warning restore 612, 618
        }
    }
}
